version: '3'

services:

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile.prod
    container_name: nginx
    networks:
      - node-network
    ports:
      - "8080:80"
    depends_on:
      - app


  app:
    build:
      context: node
    container_name: app
    volumes: 
      - ./node:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    networks:
      - node-network
    command: dockerize -wait tcp://db:3306 -timeout 20s node index.js
    ports:
     - "3000:3000"
    depends_on: 
      - db

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=123456789
      # - MYSQL_USER=joseaugusto
    networks:
      - node-network
      

networks:
  node-network:
    driver: bridge



# version: '3'

# services:

#   nginx:
#     build:
#       context: nginx
#       dockerfile: Dockerfile.prod
#     container_name: nginx
#     networks:
#       - node-network
#     ports:
#      - "8080:80"


#   app:
#     build:
#       context: node
#     container_name: app
#     volumes: 
#       - ~/curso/FullCycle/docker/fullcycle-node/node:/usr/src/app
#     tty: true
#     networks:
#       - node-network

#     # command: bash -c "npm install && npm run build && run start"

#     ports:
#      - "3000:3000"

#     depends_on: 
  
#       - db

    
#   db:
#     image: mysql:5.7
#     command: --innodb-use-native-aio=0
#     container_name: db
#     restart: always
#     tty: true
#     volumes:
#       - ~/curso/FullCycle/docker/fullcycle-node/mysql:/var/lib/mysql

#     environment:
#       - MYSQL_DATABASE=nodedb
#       - MYSQL_ROOT_PASSWORD=123456789
#       - MYSQL_USER=joseaugusto
#     networks:
#       - node-network
      

# networks:
#   node-network:
#     driver: bridge